var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/injectables/LoaderService.html",[0,1.095,1,1.095]],["body/injectables/LoaderService.html",[0,1.768,1,1.344,2,0.825,3,0.825,4,0.422,5,1.859,6,0.602,7,1.564,8,2.784,9,2.19,10,3.256,11,2.843,12,1.955,13,1.564,14,2.604,15,1.542,16,1.859,17,3.552,18,2.133,19,2.133,20,3.278,21,1.829,22,0.06,23,1.564,24,1.15,25,1.829,26,3.278,27,1.181,28,2.34,29,2.16,30,1.344,31,1.805,32,1.859,33,2.34,34,1.155,35,0.99,36,2.16,37,2.34,38,2.16,39,2.34,40,1.768,41,0.959,42,1.542,43,0.959,44,1.542,45,1.859,46,1.859,47,0.602,48,0.959,49,1.306,50,1.859,51,3.278,52,3.278,53,2.34,54,2.34,55,0.037,56,0.037]],["title/interfaces/MultipleTranslationResult.html",[57,0.941,58,1.49]],["body/interfaces/MultipleTranslationResult.html",[2,1.278,3,1.278,4,0.654,6,0.933,19,1.731,22,0.057,24,0.933,27,1.276,47,1.122,55,0.049,56,0.049,57,1.536,58,2.609,59,2.433,60,2.39,61,2.081,62,3.627,63,2.39]],["title/interfaces/TranslateConfiguration.html",[18,1.275,57,0.941]],["body/interfaces/TranslateConfiguration.html",[2,1.304,3,1.304,4,0.667,6,0.952,7,2.106,12,2.33,18,2.106,22,0.057,24,0.952,27,1.213,47,0.952,55,0.05,56,0.05,57,1.555,59,2.064,64,2.939]],["title/directives/TranslateDirective.html",[65,1.095,66,1.275]],["body/directives/TranslateDirective.html",[2,0.573,3,0.573,4,0.293,6,0.418,7,1.197,8,2.61,13,1.197,15,1.072,19,2.232,21,2.072,22,0.06,23,1.772,24,0.955,25,2.072,27,0.787,30,1.608,31,1.641,34,0.573,35,0.491,40,1.409,41,0.667,43,0.667,47,0.418,48,0.667,49,0.908,55,0.028,56,0.028,65,1.254,66,1.197,67,1.293,68,1.992,69,3.06,70,2.431,71,1.293,72,2.508,73,1.211,74,3.714,75,3.717,76,2.732,77,1.61,78,2.266,79,3.011,80,2.732,81,2.508,82,3.438,83,2.732,84,2.508,85,2.508,86,2.431,87,1.627,88,3.924,89,1.627,90,2.508,91,2.508,92,3.629,93,1.627,94,2.508,95,2.189,96,1.627,97,1.627,98,2.508,99,1.627,100,2.508,101,1.627,102,1.627,103,1.627,104,1.627,105,1.627,106,1.627,107,1.028,108,1.707,109,1.627,110,1.627,111,1.627,112,1.072,113,1.293,114,1.293,115,1.072,116,1.627,117,1.293,118,1.627,119,1.627,120,3.438,121,1.627,122,2.431,123,1.627,124,1.627,125,1.627,126,3.06,127,1.627,128,1.627,129,1.293,130,1.293,131,2.508,132,2.508,133,1.293,134,0.908,135,2.017,136,1.627]],["title/modules/TranslateModule.html",[137,1.095,138,1.275]],["body/modules/TranslateModule.html",[1,1.416,2,0.89,3,0.89,4,0.455,9,1.879,22,0.06,30,1.416,40,1.956,41,1.035,42,1.665,44,1.665,47,1.089,48,1.035,55,0.039,56,0.039,66,2.378,77,1.217,112,1.665,137,1.416,138,2.378,139,1.409,140,2.007,141,3.129,142,1.665,143,2.596,144,2.007,145,2.007,146,2.007,147,2.378,148,2.745,149,2.007,150,1.665,151,2.526,152,3.938,153,3.364,154,2.745,155,2.526,156,2.526,157,2.007,158,3.455,159,2.526,160,2.526,161,2.526]],["title/pipes/TranslatePipe.html",[147,1.275,162,1.275]],["body/pipes/TranslatePipe.html",[2,0.839,3,0.839,4,0.43,7,1.137,8,2.304,13,1.137,19,2.072,21,1.329,22,0.06,23,1.822,24,0.854,25,1.329,27,1.117,30,1.565,31,1.971,34,1.169,35,1.002,40,1.693,41,0.977,43,0.977,47,0.613,48,0.977,55,0.038,56,0.038,68,1.893,70,2.637,71,1.893,73,1.53,77,1.346,78,2.517,79,2.187,80,3.034,83,3.034,95,1.329,107,1.36,108,2.131,112,1.57,113,1.893,115,1.57,122,1.893,129,1.893,130,1.893,134,1.329,135,2.517,147,1.584,162,1.822,163,1.893,164,2.383,165,2.383,166,3.319,167,4.13,168,2.383,169,3.819,170,2.383,171,2.383,172,2.383,173,3.319,174,1.893,175,2.383,176,2.383,177,2.383,178,2.383,179,1.893,180,2.383,181,2.383,182,2.383,183,3.819]],["title/injectables/TranslateService.html",[0,1.095,77,0.941]],["body/injectables/TranslateService.html",[0,1.131,1,1.389,2,0.326,3,0.326,4,0.374,6,0.238,7,0.755,8,2.737,9,1.616,11,1.818,12,0.755,13,0.989,15,0.61,16,0.735,17,2.388,18,1.434,19,2.094,21,2.045,22,0.06,23,1.749,24,1.02,25,2.045,27,1.183,29,2.714,30,1.739,31,1.688,32,0.735,34,1.059,35,1.263,40,1.45,41,0.379,42,0.61,43,0.379,44,0.61,45,1.257,46,0.735,47,0.238,48,0.379,49,0.516,50,0.735,55,0.018,56,0.018,61,1.434,63,0.61,73,1.332,75,2.913,77,0.557,78,0.61,79,2.557,92,1.95,95,0.883,107,1.232,108,0.883,114,0.735,115,0.61,133,0.735,134,1.369,135,1.043,157,0.735,174,0.735,179,0.735,184,0.735,185,4.118,186,1.95,187,2.454,188,3.213,189,1.95,190,1.582,191,1.95,192,1.582,193,1.582,194,1.582,195,1.582,196,1.257,197,1.043,198,1.582,199,1.257,200,3.215,201,0.925,202,1.582,203,0.925,204,3.213,205,3.213,206,0.925,207,1.257,208,0.925,209,1.582,210,0.925,211,0.925,212,1.582,213,0.925,214,0.925,215,1.582,216,1.617,217,0.925,218,1.582,219,0.925,220,2.758,221,1.257,222,0.925,223,1.257,224,0.925,225,0.925,226,0.925,227,0.925,228,0.925,229,0.925,230,1.582,231,1.582,232,1.582,233,0.925,234,0.925,235,1.582,236,0.925,237,0.735,238,0.925,239,0.925,240,0.925,241,0.925,242,0.925,243,0.925,244,0.735,245,0.925,246,0.925,247,0.925,248,1.95,249,1.582,250,0.925,251,0.925,252,1.95,253,0.925,254,1.647,255,0.925,256,0.925,257,1.582,258,1.582,259,1.582,260,2.454,261,0.925,262,1.582,263,1.647,264,1.582,265,0.925,266,0.925,267,1.582,268,1.582,269,1.582,270,2.073,271,0.925,272,0.925,273,1.582,274,0.925,275,0.925,276,0.925,277,0.925,278,0.925,279,1.582,280,0.925,281,1.582,282,0.925,283,0.925,284,0.925,285,0.925,286,1.582,287,0.925,288,0.925,289,1.582,290,0.925,291,0.925,292,1.582,293,2.073,294,2.073,295,0.925,296,0.925,297,0.925,298,0.925,299,0.925,300,0.925,301,0.925,302,0.925,303,0.925,304,0.735,305,0.925,306,0.925]],["title/changelog.html",[307,1.261,308,1.489,309,2.259]],["body/changelog.html",[4,0.475,22,0.04,23,1.696,27,0.677,34,0.928,35,0.795,43,1.65,55,0.04,56,0.04,57,0.928,61,1.257,65,1.457,73,1.585,76,2.093,86,2.093,107,1.457,197,1.736,310,2.824,311,3.555,312,2.093,313,4.308,314,2.634,315,2.093,316,3.555,317,3.555,318,2.634,319,2.634,320,2.093,321,2.634,322,2.634,323,2.634,324,2.634,325,3.555,326,2.634,327,2.093,328,2.634,329,2.634,330,2.093,331,4.499,332,2.634,333,2.634,334,3.555,335,3.555,336,3.555,337,2.634,338,2.634,339,2.634,340,2.634,341,2.093,342,2.093,343,2.634,344,2.634,345,2.634,346,2.634,347,2.634,348,2.634,349,2.634,350,2.634,351,4.024,352,2.634,353,2.634,354,2.634,355,4.024,356,2.634,357,2.093,358,2.634,359,2.634,360,2.634,361,2.093,362,2.634,363,2.634,364,2.634,365,2.634,366,2.634,367,2.634,368,2.093,369,2.634,370,2.634,371,3.555,372,2.634,373,2.634,374,2.634,375,2.634,376,2.093,377,2.634,378,2.634,379,2.634,380,2.093,381,2.634,382,2.634,383,1.47,384,2.634,385,2.093,386,2.634,387,2.634,388,2.093,389,2.634,390,2.634,391,2.634]],["title/coverage.html",[392,2.851]],["body/coverage.html",[0,1.576,1,1.215,4,0.534,5,2.355,9,1.414,18,1.414,22,0.058,24,0.762,55,0.044,56,0.044,57,1.354,58,1.653,59,2.144,60,1.953,64,2.355,65,1.215,66,1.414,67,2.355,73,1.044,77,1.044,107,1.215,147,1.414,162,1.414,163,2.355,184,2.355,254,4.057,383,2.38,392,2.355,393,2.355,394,2.964,395,2.964,396,3.389,397,3.158,398,2.355,399,4.945,400,2.355,401,2.355,402,2.964,403,3.054,404,2.355,405,2.964,406,2.964,407,2.355,408,2.964,409,2.964,410,2.964]],["title/dependencies.html",[139,1.784,411,2.259]],["body/dependencies.html",[22,0.057,41,1.6,43,1.6,55,0.052,56,0.052,139,2.177,412,3.903,413,3.903,414,4.823]],["title/miscellaneous/enumerations.html",[415,0.926,416,2.54]],["body/miscellaneous/enumerations.html",[6,1.008,22,0.052,35,1.184,55,0.052,56,0.052,244,3.627,415,1.607,416,3.114,417,3.92,418,3.92,419,4.566]],["title/index.html",[6,0.581,307,1.261,308,1.489]],["body/index.html",[4,0.778,12,1.184,13,0.766,22,0.059,27,1.171,29,1.057,30,1.513,31,1.447,34,1.552,35,0.749,36,1.057,38,1.635,40,1.017,47,0.413,48,0.658,49,0.895,55,0.028,56,0.028,61,1.761,65,1.243,73,1.736,77,0.874,95,1.384,117,1.971,134,1.384,137,0.658,138,0.766,142,1.635,153,1.275,154,1.275,162,1.447,186,1.275,189,1.275,191,1.275,196,2.41,197,2.249,199,1.275,200,2.711,207,1.275,216,1.057,221,1.275,223,1.275,237,1.275,248,1.971,263,1.275,304,1.275,307,0.895,310,1.275,312,2.711,315,1.275,327,1.275,341,1.275,342,2.41,361,1.275,368,1.275,376,3.232,380,1.275,383,0.895,385,2.41,388,1.275,420,2.481,421,1.605,422,1.605,423,1.605,424,1.605,425,1.605,426,2.481,427,2.481,428,1.605,429,1.605,430,1.605,431,1.605,432,1.605,433,3.033,434,2.711,435,2.481,436,1.605,437,3.033,438,2.481,439,3.033,440,1.605,441,2.481,442,1.605,443,1.605,444,1.605,445,3.413,446,1.971,447,3.69,448,3.033,449,1.605,450,1.605,451,2.481,452,1.605,453,3.033,454,3.427,455,1.605,456,2.41,457,3.413,458,1.605,459,1.605,460,1.605,461,1.605,462,1.605,463,2.481,464,3.033,465,1.605,466,1.605,467,1.605,468,2.481,469,1.605,470,1.605,471,1.605,472,3.902,473,1.605,474,1.605,475,2.481,476,1.605,477,1.605,478,1.605,479,1.605,480,1.605,481,1.605,482,3.033,483,2.41,484,2.481,485,1.605,486,3.69,487,1.275,488,1.605,489,1.605,490,1.605,491,1.605,492,1.605,493,1.605,494,1.057,495,1.605,496,1.605,497,1.605,498,1.605,499,1.605,500,1.605,501,1.605,502,1.605,503,1.605,504,1.605,505,1.605,506,1.605,507,1.605,508,1.605,509,2.481,510,1.605,511,1.605,512,1.605,513,1.605,514,1.605,515,2.481,516,1.605,517,1.605]],["title/license.html",[307,1.261,308,1.489,518,1.795]],["body/license.html",[4,0.519,22,0.043,55,0.043,56,0.043,108,1.607,143,1.898,150,1.898,320,2.288,357,2.288,393,2.288,454,2.997,483,3.343,487,2.288,518,2.288,519,3.773,520,4.208,521,2.881,522,2.881,523,2.881,524,2.881,525,2.881,526,3.773,527,2.881,528,2.881,529,2.881,530,2.881,531,3.773,532,2.881,533,4.465,534,4.971,535,2.881,536,3.773,537,2.881,538,4.208,539,3.773,540,2.881,541,2.881,542,2.881,543,2.881,544,2.881,545,2.881,546,2.881,547,2.881,548,2.881,549,2.881,550,2.881,551,3.773,552,3.773,553,2.881,554,2.881,555,3.773,556,2.881,557,2.881,558,2.881,559,2.881,560,2.881,561,2.881,562,2.881,563,2.881,564,2.881,565,2.881,566,2.881,567,2.881,568,2.881,569,2.881,570,2.881,571,2.881,572,2.881,573,2.881,574,2.881,575,2.881,576,2.881]],["title/modules.html",[137,1.471]],["body/modules.html",[22,0.052,55,0.052,56,0.052,137,1.634,138,1.902,494,2.628,577,3.987,578,3.987,579,3.987]],["title/overview.html",[580,2.851]],["body/overview.html",[0,1.369,22,0.056,47,0.859,55,0.047,56,0.047,57,1.176,65,1.369,66,2.391,137,1.699,138,2.416,139,1.863,140,2.652,141,2.652,142,2.2,143,2.2,144,2.652,145,2.652,146,2.652,147,2.391,148,3.293,149,2.652,150,2.2,162,1.593,252,3.582,580,2.652,581,4.146]],["title/miscellaneous/typealiases.html",[415,0.926,582,3.197]],["body/miscellaneous/typealiases.html",[6,0.991,22,0.054,24,0.991,27,0.991,55,0.051,56,0.051,58,2.15,59,2.15,60,2.979,63,3.162,415,1.58,583,3.854,584,3.854]],["title/miscellaneous/variables.html",[397,2.107,415,0.926]],["body/miscellaneous/variables.html",[1,1.543,6,0.739,9,2.128,10,2.281,11,1.892,12,1.37,14,2.281,22,0.059,24,0.968,34,1.706,35,1.435,36,1.892,38,1.892,55,0.043,56,0.043,61,1.797,73,1.48,107,1.177,216,2.481,330,2.991,383,2.488,396,3.543,397,1.892,398,3.338,400,3.338,401,3.338,403,2.281,404,3.338,407,2.281,415,1.177,434,2.281,446,2.281,456,2.281,494,2.481,585,2.872,586,3.765,587,3.765,588,2.872,589,2.872,590,2.872,591,2.872,592,2.872,593,2.872,594,2.872]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/MultipleTranslationResult.html":{},"interfaces/TranslateConfiguration.html":{},"directives/TranslateDirective.html":{},"modules/TranslateModule.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":254,"title":{},"body":{"injectables/TranslateService.html":{},"coverage.html":{}}}],["0/1",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":252,"title":{},"body":{"injectables/TranslateService.html":{},"overview.html":{}}}],["1.0.1",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":380,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["1.1.0",{"_index":366,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":363,"title":{},"body":{"changelog.html":{}}}],["1.1.12",{"_index":327,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["1.1.4",{"_index":364,"title":{},"body":{"changelog.html":{}}}],["1.1.5",{"_index":350,"title":{},"body":{"changelog.html":{}}}],["1.1.8",{"_index":326,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":581,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":310,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["2008",{"_index":522,"title":{},"body":{"license.html":{}}}],["2018",{"_index":523,"title":{},"body":{"license.html":{}}}],["6",{"_index":313,"title":{},"body":{"changelog.html":{}}}],["6.0.0",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["abov",{"_index":550,"title":{},"body":{"license.html":{}}}],["acc",{"_index":289,"title":{},"body":{"injectables/TranslateService.html":{}}}],["accept",{"_index":509,"title":{},"body":{"index.html":{}}}],["accessor",{"_index":110,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["action",{"_index":572,"title":{},"body":{"license.html":{}}}],["ad",{"_index":340,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":69,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["alias",{"_index":583,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":351,"title":{},"body":{"changelog.html":{}}}],["alreadi",{"_index":361,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["altern",{"_index":482,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":545,"title":{},"body":{"license.html":{}}}],["angular",{"_index":312,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/common",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":42,"title":{},"body":{"injectables/LoaderService.html":{},"modules/TranslateModule.html":{},"injectables/TranslateService.html":{}}}],["angular/cor",{"_index":41,"title":{},"body":{"injectables/LoaderService.html":{},"directives/TranslateDirective.html":{},"modules/TranslateModule.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"dependencies.html":{}}}],["anoth",{"_index":491,"title":{},"body":{"index.html":{}}}],["anywher",{"_index":513,"title":{},"body":{"index.html":{}}}],["aot",{"_index":321,"title":{},"body":{"changelog.html":{}}}],["app",{"_index":349,"title":{},"body":{"changelog.html":{}}}],["appli",{"_index":516,"title":{},"body":{"index.html":{}}}],["applic",{"_index":385,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodul",{"_index":430,"title":{},"body":{"index.html":{}}}],["arg",{"_index":167,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["aris",{"_index":575,"title":{},"body":{"license.html":{}}}],["array",{"_index":200,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{}}}],["arriv",{"_index":502,"title":{},"body":{"index.html":{}}}],["assets/languag",{"_index":38,"title":{},"body":{"injectables/LoaderService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["assets/languages/default",{"_index":444,"title":{},"body":{"index.html":{}}}],["assets/languages/overrid",{"_index":476,"title":{},"body":{"index.html":{}}}],["associ",{"_index":535,"title":{},"body":{"license.html":{}}}],["assum",{"_index":377,"title":{},"body":{"changelog.html":{}}}],["author",{"_index":565,"title":{},"body":{"license.html":{}}}],["avail",{"_index":438,"title":{},"body":{"index.html":{}}}],["b",{"_index":212,"title":{},"body":{"injectables/TranslateService.html":{}}}],["b]*\\\\",{"_index":231,"title":{},"body":{"injectables/TranslateService.html":{}}}],["back",{"_index":474,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":237,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{}}}],["behaviorsubject(fals",{"_index":235,"title":{},"body":{"injectables/TranslateService.html":{}}}],["better",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["bodi",{"_index":446,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["body.descript",{"_index":468,"title":{},"body":{"index.html":{}}}],["body.greet",{"_index":458,"title":{},"body":{"index.html":{}}}],["body.greetingservic",{"_index":460,"title":{},"body":{"index.html":{}}}],["body.titl",{"_index":457,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":214,"title":{},"body":{"injectables/TranslateService.html":{}}}],["boolean(param",{"_index":295,"title":{},"body":{"injectables/TranslateService.html":{}}}],["bootstrap",{"_index":142,"title":{},"body":{"modules/TranslateModule.html":{},"index.html":{},"overview.html":{}}}],["break",{"_index":303,"title":{},"body":{"injectables/TranslateService.html":{}}}],["brows",{"_index":579,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":494,"title":{},"body":{"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browserdynamictestingmodul",{"_index":398,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["browserlanguag",{"_index":248,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{}}}],["browserlanguage.indexof",{"_index":251,"title":{},"body":{"injectables/TranslateService.html":{}}}],["browserlanguage.indexof('_",{"_index":255,"title":{},"body":{"injectables/TranslateService.html":{}}}],["browserlanguage.split",{"_index":253,"title":{},"body":{"injectables/TranslateService.html":{}}}],["browserlanguage.split('_')[0",{"_index":256,"title":{},"body":{"injectables/TranslateService.html":{}}}],["browsermodul",{"_index":428,"title":{},"body":{"index.html":{}}}],["build",{"_index":317,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":521,"title":{},"body":{"license.html":{}}}],["call",{"_index":342,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["captur",{"_index":339,"title":{},"body":{"changelog.html":{}}}],["chang",{"_index":367,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":309,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":530,"title":{},"body":{"license.html":{}}}],["child",{"_index":359,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":568,"title":{},"body":{"license.html":{}}}],["class",{"_index":48,"title":{},"body":{"injectables/LoaderService.html":{},"directives/TranslateDirective.html":{},"modules/TranslateModule.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"index.html":{}}}],["cluster_translatemodul",{"_index":144,"title":{},"body":{"modules/TranslateModule.html":{},"overview.html":{}}}],["cluster_translatemodule_declar",{"_index":145,"title":{},"body":{"modules/TranslateModule.html":{},"overview.html":{}}}],["cluster_translatemodule_export",{"_index":146,"title":{},"body":{"modules/TranslateModule.html":{},"overview.html":{}}}],["code",{"_index":495,"title":{},"body":{"index.html":{}}}],["codebas",{"_index":455,"title":{},"body":{"index.html":{}}}],["combinelatest",{"_index":240,"title":{},"body":{"injectables/TranslateService.html":{}}}],["combinelatest(fil",{"_index":272,"title":{},"body":{"injectables/TranslateService.html":{}}}],["compon",{"_index":360,"title":{},"body":{"changelog.html":{}}}],["concis",{"_index":369,"title":{},"body":{"changelog.html":{}}}],["condit",{"_index":357,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["config",{"_index":9,"title":{},"body":{"injectables/LoaderService.html":{},"modules/TranslateModule.html":{},"injectables/TranslateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.path",{"_index":52,"title":{},"body":{"injectables/LoaderService.html":{}}}],["configur",{"_index":318,"title":{},"body":{"changelog.html":{}}}],["configuration.interfac",{"_index":46,"title":{},"body":{"injectables/LoaderService.html":{},"injectables/TranslateService.html":{}}}],["configuration.interface.t",{"_index":64,"title":{},"body":{"interfaces/TranslateConfiguration.html":{},"coverage.html":{}}}],["connect",{"_index":576,"title":{},"body":{"license.html":{}}}],["consol",{"_index":335,"title":{},"body":{"changelog.html":{}}}],["console.warn('unknown",{"_index":300,"title":{},"body":{"injectables/TranslateService.html":{}}}],["const",{"_index":134,"title":{},"body":{"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"index.html":{}}}],["constant",{"_index":244,"title":{},"body":{"injectables/TranslateService.html":{},"miscellaneous/enumerations.html":{}}}],["constants.exit",{"_index":220,"title":{},"body":{"injectables/TranslateService.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"injectables/LoaderService.html":{},"directives/TranslateDirective.html":{},"injectables/TranslateService.html":{}}}],["constructor(el",{"_index":87,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["constructor(http",{"_index":16,"title":{},"body":{"injectables/LoaderService.html":{},"injectables/TranslateService.html":{}}}],["constructor(priv",{"_index":177,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["constructor(publ",{"_index":49,"title":{},"body":{"injectables/LoaderService.html":{},"directives/TranslateDirective.html":{},"injectables/TranslateService.html":{},"index.html":{}}}],["contain",{"_index":441,"title":{},"body":{"index.html":{}}}],["contract",{"_index":573,"title":{},"body":{"license.html":{}}}],["copi",{"_index":533,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":520,"title":{},"body":{"license.html":{}}}],["corey",{"_index":524,"title":{},"body":{"license.html":{}}}],["correspond",{"_index":489,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":392,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":493,"title":{},"body":{"index.html":{}}}],["damag",{"_index":569,"title":{},"body":{"license.html":{}}}],["deal",{"_index":536,"title":{},"body":{"license.html":{}}}],["declar",{"_index":141,"title":{},"body":{"modules/TranslateModule.html":{},"overview.html":{}}}],["decor",{"_index":32,"title":{},"body":{"injectables/LoaderService.html":{},"injectables/TranslateService.html":{}}}],["default",{"_index":34,"title":{},"body":{"injectables/LoaderService.html":{},"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultfil",{"_index":275,"title":{},"body":{"injectables/TranslateService.html":{}}}],["defaultfile].indexof(undefin",{"_index":276,"title":{},"body":{"injectables/TranslateService.html":{}}}],["defaultfilenam",{"_index":270,"title":{},"body":{"injectables/TranslateService.html":{}}}],["defaultkey",{"_index":185,"title":{},"body":{"injectables/TranslateService.html":{}}}],["defaultprefix",{"_index":186,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{}}}],["defaulttransl",{"_index":279,"title":{},"body":{"injectables/TranslateService.html":{}}}],["defin",{"_index":19,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/MultipleTranslationResult.html":{},"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{}}}],["depend",{"_index":139,"title":{"dependencies.html":{}},"body":{"modules/TranslateModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":375,"title":{},"body":{"changelog.html":{}}}],["descript",{"_index":448,"title":{},"body":{"index.html":{}}}],["determin",{"_index":500,"title":{},"body":{"index.html":{}}}],["direct",{"_index":65,"title":{"directives/TranslateDirective.html":{}},"body":{"directives/TranslateDirective.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directori",{"_index":440,"title":{},"body":{"index.html":{}}}],["display",{"_index":362,"title":{},"body":{"changelog.html":{}}}],["distribut",{"_index":320,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["docheck",{"_index":81,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["docheck(isload",{"_index":91,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["document",{"_index":393,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doesn't",{"_index":344,"title":{},"body":{"changelog.html":{}}}],["dynamic/testing').browserdynamictestingmodul",{"_index":588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic/testing').platformbrowserdynamictest",{"_index":590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eg",{"_index":433,"title":{},"body":{"index.html":{}}}],["element",{"_index":74,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["elementref",{"_index":88,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["en",{"_index":434,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["en');thi",{"_index":479,"title":{},"body":{"index.html":{}}}],["en.json",{"_index":445,"title":{},"body":{"index.html":{}}}],["enforc",{"_index":484,"title":{},"body":{"index.html":{}}}],["ensur",{"_index":343,"title":{},"body":{"changelog.html":{}}}],["entir",{"_index":485,"title":{},"body":{"index.html":{}}}],["enumer",{"_index":416,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["esm2015",{"_index":322,"title":{},"body":{"changelog.html":{}}}],["esm5",{"_index":324,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":564,"title":{},"body":{"license.html":{}}}],["ex",{"_index":511,"title":{},"body":{"index.html":{}}}],["exactli",{"_index":501,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":456,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["execut",{"_index":504,"title":{},"body":{"index.html":{}}}],["exit",{"_index":419,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["export",{"_index":47,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/MultipleTranslationResult.html":{},"interfaces/TranslateConfiguration.html":{},"directives/TranslateDirective.html":{},"modules/TranslateModule.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":557,"title":{},"body":{"license.html":{}}}],["extens",{"_index":10,"title":{},"body":{"injectables/LoaderService.html":{},"miscellaneous/variables.html":{}}}],["fall",{"_index":473,"title":{},"body":{"index.html":{}}}],["fallback",{"_index":341,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fals",{"_index":176,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["fesm2015",{"_index":323,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":4,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/MultipleTranslationResult.html":{},"interfaces/TranslateConfiguration.html":{},"directives/TranslateDirective.html":{},"modules/TranslateModule.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["filenam",{"_index":29,"title":{},"body":{"injectables/LoaderService.html":{},"injectables/TranslateService.html":{},"index.html":{}}}],["filename.split",{"_index":258,"title":{},"body":{"injectables/TranslateService.html":{}}}],["filter",{"_index":174,"title":{},"body":{"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{}}}],["filter(([fil",{"_index":274,"title":{},"body":{"injectables/TranslateService.html":{}}}],["filter(boolean",{"_index":179,"title":{},"body":{"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{}}}],["final.replace(this.matcher(key",{"_index":298,"title":{},"body":{"injectables/TranslateService.html":{}}}],["first",{"_index":426,"title":{},"body":{"index.html":{}}}],["firstnam",{"_index":451,"title":{},"body":{"index.html":{}}}],["fit",{"_index":560,"title":{},"body":{"license.html":{}}}],["follow",{"_index":549,"title":{},"body":{"license.html":{}}}],["forchild",{"_index":161,"title":{},"body":{"modules/TranslateModule.html":{}}}],["forecast",{"_index":386,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["forroot(config",{"_index":159,"title":{},"body":{"modules/TranslateModule.html":{}}}],["found",{"_index":304,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{}}}],["free",{"_index":529,"title":{},"body":{"license.html":{}}}],["furnish",{"_index":548,"title":{},"body":{"license.html":{}}}],["get",{"_index":307,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["get(keypath",{"_index":199,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{}}}],["getal",{"_index":190,"title":{},"body":{"injectables/TranslateService.html":{}}}],["getall(keypath",{"_index":202,"title":{},"body":{"injectables/TranslateService.html":{}}}],["getbrowserlanguag",{"_index":191,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{}}}],["getbyfilenam",{"_index":192,"title":{},"body":{"injectables/TranslateService.html":{}}}],["getbyfilename(keypath",{"_index":207,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{}}}],["getfil",{"_index":14,"title":{},"body":{"injectables/LoaderService.html":{},"miscellaneous/variables.html":{}}}],["getfile(filenam",{"_index":26,"title":{},"body":{"injectables/LoaderService.html":{}}}],["getfilebynam",{"_index":337,"title":{},"body":{"changelog.html":{}}}],["geton",{"_index":193,"title":{},"body":{"injectables/TranslateService.html":{}}}],["getone(keypath",{"_index":209,"title":{},"body":{"injectables/TranslateService.html":{}}}],["gettestb",{"_index":400,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":515,"title":{},"body":{"index.html":{}}}],["gm",{"_index":232,"title":{},"body":{"injectables/TranslateService.html":{}}}],["gracefulli",{"_index":332,"title":{},"body":{"changelog.html":{}}}],["grant",{"_index":528,"title":{},"body":{"license.html":{}}}],["greet",{"_index":449,"title":{},"body":{"index.html":{}}}],["handl",{"_index":328,"title":{},"body":{"changelog.html":{}}}],["hello",{"_index":450,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":527,"title":{},"body":{"license.html":{}}}],["holder",{"_index":566,"title":{},"body":{"license.html":{}}}],["html",{"_index":352,"title":{},"body":{"changelog.html":{}}}],["http",{"_index":11,"title":{},"body":{"injectables/LoaderService.html":{},"injectables/TranslateService.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":17,"title":{},"body":{"injectables/LoaderService.html":{},"injectables/TranslateService.html":{}}}],["httpclientmodul",{"_index":154,"title":{},"body":{"modules/TranslateModule.html":{},"index.html":{}}}],["identifi",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":370,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":68,"title":{},"body":{"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{}}}],["impli",{"_index":558,"title":{},"body":{"license.html":{}}}],["import",{"_index":40,"title":{},"body":{"injectables/LoaderService.html":{},"directives/TranslateDirective.html":{},"modules/TranslateModule.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"index.html":{}}}],["includ",{"_index":538,"title":{},"body":{"license.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"injectables/LoaderService.html":{},"interfaces/MultipleTranslationResult.html":{},"interfaces/TranslateConfiguration.html":{},"directives/TranslateDirective.html":{},"injectables/TranslateService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/MultipleTranslationResult.html":{},"interfaces/TranslateConfiguration.html":{},"directives/TranslateDirective.html":{},"modules/TranslateModule.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{}}}],["initi",{"_index":382,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":0,"title":{"injectables/LoaderService.html":{},"injectables/TranslateService.html":{}},"body":{"injectables/LoaderService.html":{},"injectables/TranslateService.html":{},"coverage.html":{},"overview.html":{}}}],["inject(config",{"_index":50,"title":{},"body":{"injectables/LoaderService.html":{},"injectables/TranslateService.html":{}}}],["injectiontoken('config",{"_index":591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input",{"_index":86,"title":{},"body":{"directives/TranslateDirective.html":{},"changelog.html":{}}}],["input('transl",{"_index":116,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["instanceof",{"_index":267,"title":{},"body":{"injectables/TranslateService.html":{}}}],["integr",{"_index":365,"title":{},"body":{"changelog.html":{}}}],["intend",{"_index":499,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":57,"title":{"interfaces/MultipleTranslationResult.html":{},"interfaces/TranslateConfiguration.html":{}},"body":{"interfaces/MultipleTranslationResult.html":{},"interfaces/TranslateConfiguration.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["internation",{"_index":422,"title":{},"body":{"index.html":{}}}],["intl",{"_index":420,"title":{},"body":{"index.html":{}}}],["isequival",{"_index":194,"title":{},"body":{"injectables/TranslateService.html":{}}}],["isequivalent(a",{"_index":211,"title":{},"body":{"injectables/TranslateService.html":{}}}],["isload",{"_index":94,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["it'",{"_index":378,"title":{},"body":{"changelog.html":{}}}],["jest.t",{"_index":396,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["json",{"_index":36,"title":{},"body":{"injectables/LoaderService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":61,"title":{},"body":{"interfaces/MultipleTranslationResult.html":{},"injectables/TranslateService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["key/valu",{"_index":442,"title":{},"body":{"index.html":{}}}],["keypath",{"_index":75,"title":{},"body":{"directives/TranslateDirective.html":{},"injectables/TranslateService.html":{}}}],["keypath.split",{"_index":291,"title":{},"body":{"injectables/TranslateService.html":{}}}],["kind",{"_index":556,"title":{},"body":{"license.html":{}}}],["known",{"_index":594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["known_key",{"_index":593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["languag",{"_index":376,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["legend",{"_index":140,"title":{},"body":{"modules/TranslateModule.html":{},"overview.html":{}}}],["length",{"_index":305,"title":{},"body":{"injectables/TranslateService.html":{}}}],["lenient",{"_index":356,"title":{},"body":{"changelog.html":{}}}],["level",{"_index":436,"title":{},"body":{"index.html":{}}}],["liabil",{"_index":570,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":567,"title":{},"body":{"license.html":{}}}],["librari",{"_index":423,"title":{},"body":{"index.html":{}}}],["licens",{"_index":518,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycl",{"_index":508,"title":{},"body":{"index.html":{}}}],["lightweight",{"_index":421,"title":{},"body":{"index.html":{}}}],["limit",{"_index":539,"title":{},"body":{"license.html":{}}}],["linda",{"_index":459,"title":{},"body":{"index.html":{}}}],["load",{"_index":486,"title":{},"body":{"index.html":{}}}],["loader.servic",{"_index":157,"title":{},"body":{"modules/TranslateModule.html":{},"injectables/TranslateService.html":{}}}],["loaderservic",{"_index":1,"title":{"injectables/LoaderService.html":{}},"body":{"injectables/LoaderService.html":{},"modules/TranslateModule.html":{},"injectables/TranslateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loaderservice(http",{"_index":247,"title":{},"body":{"injectables/TranslateService.html":{}}}],["loaderservicemock",{"_index":404,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["log",{"_index":333,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":346,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":437,"title":{},"body":{"index.html":{}}}],["match",{"_index":56,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/MultipleTranslationResult.html":{},"interfaces/TranslateConfiguration.html":{},"directives/TranslateDirective.html":{},"modules/TranslateModule.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matcher",{"_index":187,"title":{},"body":{"injectables/TranslateService.html":{}}}],["merchant",{"_index":559,"title":{},"body":{"license.html":{}}}],["merg",{"_index":542,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":71,"title":{},"body":{"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{}}}],["method",{"_index":13,"title":{},"body":{"injectables/LoaderService.html":{},"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"index.html":{}}}],["minor",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["miscellan",{"_index":415,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":519,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":541,"title":{},"body":{"license.html":{}}}],["modul",{"_index":137,"title":{"modules/TranslateModule.html":{},"modules.html":{}},"body":{"modules/TranslateModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":152,"title":{},"body":{"modules/TranslateModule.html":{}}}],["more",{"_index":331,"title":{},"body":{"changelog.html":{}}}],["move",{"_index":387,"title":{},"body":{"changelog.html":{}}}],["multipl",{"_index":466,"title":{},"body":{"index.html":{}}}],["multipletranslationresult",{"_index":58,"title":{"interfaces/MultipleTranslationResult.html":{}},"body":{"interfaces/MultipleTranslationResult.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["name",{"_index":23,"title":{},"body":{"injectables/LoaderService.html":{},"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"changelog.html":{}}}],["natur",{"_index":353,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":497,"title":{},"body":{"index.html":{}}}],["network",{"_index":503,"title":{},"body":{"index.html":{}}}],["new",{"_index":107,"title":{},"body":{"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngafterviewinit",{"_index":82,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["ngmodul",{"_index":153,"title":{},"body":{"modules/TranslateModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":83,"title":{},"body":{"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{}}}],["noninfring",{"_index":563,"title":{},"body":{"license.html":{}}}],["notic",{"_index":551,"title":{},"body":{"license.html":{}}}],["now",{"_index":371,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":330,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":216,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["object.keys(param",{"_index":296,"title":{},"body":{"injectables/TranslateService.html":{}}}],["observ",{"_index":31,"title":{},"body":{"injectables/LoaderService.html":{},"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"index.html":{}}}],["observablefrom",{"_index":239,"title":{},"body":{"injectables/TranslateService.html":{}}}],["observablefrom([this.read(keypath",{"_index":287,"title":{},"body":{"injectables/TranslateService.html":{}}}],["observableof",{"_index":238,"title":{},"body":{"injectables/TranslateService.html":{}}}],["observableof(keypaths.reduc",{"_index":288,"title":{},"body":{"injectables/TranslateService.html":{}}}],["observableof(translations[key",{"_index":592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obtain",{"_index":532,"title":{},"body":{"license.html":{}}}],["on",{"_index":461,"title":{},"body":{"index.html":{}}}],["onc",{"_index":453,"title":{},"body":{"index.html":{}}}],["ondestroy",{"_index":70,"title":{},"body":{"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{}}}],["oper",{"_index":315,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["option",{"_index":25,"title":{},"body":{"injectables/LoaderService.html":{},"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{}}}],["origin",{"_index":510,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":487,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":150,"title":{},"body":{"modules/TranslateModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":480,"title":{},"body":{"index.html":{}}}],["over",{"_index":496,"title":{},"body":{"index.html":{}}}],["overrid",{"_index":472,"title":{},"body":{"index.html":{}}}],["override'(from",{"_index":481,"title":{},"body":{"index.html":{}}}],["overridefilenam",{"_index":286,"title":{},"body":{"injectables/TranslateService.html":{}}}],["overridekey",{"_index":188,"title":{},"body":{"injectables/TranslateService.html":{}}}],["overview",{"_index":580,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":411,"title":{"dependencies.html":{}},"body":{}}],["pair",{"_index":443,"title":{},"body":{"index.html":{}}}],["param",{"_index":92,"title":{},"body":{"directives/TranslateDirective.html":{},"injectables/TranslateService.html":{}}}],["paramet",{"_index":21,"title":{},"body":{"injectables/LoaderService.html":{},"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{}}}],["params(param",{"_index":118,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["params[key",{"_index":299,"title":{},"body":{"injectables/TranslateService.html":{}}}],["particular",{"_index":561,"title":{},"body":{"license.html":{}}}],["pass",{"_index":355,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":12,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/TranslateConfiguration.html":{},"injectables/TranslateService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["path.length",{"_index":306,"title":{},"body":{"injectables/TranslateService.html":{}}}],["pattern",{"_index":517,"title":{},"body":{"index.html":{}}}],["peer",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["perform",{"_index":507,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":526,"title":{},"body":{"license.html":{}}}],["permit",{"_index":547,"title":{},"body":{"license.html":{}}}],["person",{"_index":531,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":162,"title":{"pipes/TranslatePipe.html":{}},"body":{"pipes/TranslatePipe.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["pipe(take(1",{"_index":133,"title":{},"body":{"directives/TranslateDirective.html":{},"injectables/TranslateService.html":{}}}],["pipe(takeuntil(this.unsubscrib",{"_index":124,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["pipeabl",{"_index":314,"title":{},"body":{"changelog.html":{}}}],["pipetransform",{"_index":173,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["platformbrowserdynamictest",{"_index":401,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["portion",{"_index":554,"title":{},"body":{"license.html":{}}}],["privat",{"_index":79,"title":{},"body":{"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{}}}],["properti",{"_index":7,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/TranslateConfiguration.html":{},"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{}}}],["provid",{"_index":143,"title":{},"body":{"modules/TranslateModule.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":8,"title":{},"body":{"injectables/LoaderService.html":{},"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{}}}],["publish",{"_index":543,"title":{},"body":{"license.html":{}}}],["pure",{"_index":175,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["purpos",{"_index":562,"title":{},"body":{"license.html":{}}}],["read",{"_index":195,"title":{},"body":{"injectables/TranslateService.html":{}}}],["read(keypath",{"_index":215,"title":{},"body":{"injectables/TranslateService.html":{}}}],["readvalu",{"_index":135,"title":{},"body":{"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{}}}],["readvalue(path",{"_index":218,"title":{},"body":{"injectables/TranslateService.html":{}}}],["reduc",{"_index":302,"title":{},"body":{"injectables/TranslateService.html":{}}}],["reduce((fin",{"_index":297,"title":{},"body":{"injectables/TranslateService.html":{}}}],["regexp('{{\\\\s?[\\\\b",{"_index":230,"title":{},"body":{"injectables/TranslateService.html":{}}}],["registerkeycheck",{"_index":84,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["registerkeychecker(keypath",{"_index":98,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["request",{"_index":488,"title":{},"body":{"index.html":{}}}],["require('@angular/core/testing').gettestb",{"_index":589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('@angular/platform",{"_index":587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":149,"title":{},"body":{"modules/TranslateModule.html":{},"overview.html":{}}}],["restrict",{"_index":537,"title":{},"body":{"license.html":{}}}],["result",{"_index":55,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/MultipleTranslationResult.html":{},"interfaces/TranslateConfiguration.html":{},"directives/TranslateDirective.html":{},"modules/TranslateModule.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.typ",{"_index":243,"title":{},"body":{"injectables/TranslateService.html":{}}}],["result.type.t",{"_index":60,"title":{},"body":{"interfaces/MultipleTranslationResult.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["result.type.ts:1",{"_index":62,"title":{},"body":{"interfaces/MultipleTranslationResult.html":{}}}],["return",{"_index":30,"title":{},"body":{"injectables/LoaderService.html":{},"directives/TranslateDirective.html":{},"modules/TranslateModule.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"index.html":{}}}],["revert",{"_index":381,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":540,"title":{},"body":{"license.html":{}}}],["rollup",{"_index":316,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":427,"title":{},"body":{"index.html":{}}}],["rreliabl",{"_index":338,"title":{},"body":{"changelog.html":{}}}],["runonecheck",{"_index":85,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["runonecheck(keypath",{"_index":100,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["rxj",{"_index":43,"title":{},"body":{"injectables/LoaderService.html":{},"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"changelog.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":115,"title":{},"body":{"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{}}}],["safe",{"_index":512,"title":{},"body":{"index.html":{}}}],["same",{"_index":368,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["selector",{"_index":72,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["sell",{"_index":546,"title":{},"body":{"license.html":{}}}],["servic",{"_index":435,"title":{},"body":{"index.html":{}}}],["set",{"_index":117,"title":{},"body":{"directives/TranslateDirective.html":{},"index.html":{}}}],["setdefault",{"_index":196,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{}}}],["setdefault(filenam",{"_index":221,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{}}}],["setlanguag",{"_index":373,"title":{},"body":{"changelog.html":{}}}],["setoverrid",{"_index":197,"title":{},"body":{"injectables/TranslateService.html":{},"changelog.html":{},"index.html":{}}}],["setoverride(filenam",{"_index":223,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{}}}],["setparams(param",{"_index":111,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["setup",{"_index":383,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["shall",{"_index":552,"title":{},"body":{"license.html":{}}}],["slow",{"_index":348,"title":{},"body":{"changelog.html":{}}}],["softwar",{"_index":534,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/MultipleTranslationResult.html":{},"interfaces/TranslateConfiguration.html":{},"directives/TranslateDirective.html":{},"modules/TranslateModule.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{}}}],["specifi",{"_index":475,"title":{},"body":{"index.html":{}}}],["src/.../config.token.t",{"_index":585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.enum.t",{"_index":417,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../loader.service.mock.t",{"_index":586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../translat",{"_index":584,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/loader.service.t",{"_index":5,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["src/loader.service.ts:11",{"_index":39,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/loader.service.ts:12",{"_index":20,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/loader.service.ts:14",{"_index":37,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/loader.service.ts:15",{"_index":33,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/loader.service.ts:19",{"_index":28,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/mocks/loader.service.mock.t",{"_index":403,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/translate.directive.t",{"_index":67,"title":{},"body":{"directives/TranslateDirective.html":{},"coverage.html":{}}}],["src/translate.directive.ts:11",{"_index":103,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["src/translate.directive.ts:12",{"_index":104,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["src/translate.directive.ts:13",{"_index":106,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["src/translate.directive.ts:14",{"_index":109,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["src/translate.directive.ts:16",{"_index":90,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["src/translate.directive.ts:23",{"_index":89,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["src/translate.directive.ts:25",{"_index":102,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["src/translate.directive.ts:26",{"_index":105,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["src/translate.directive.ts:31",{"_index":96,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["src/translate.directive.ts:37",{"_index":97,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["src/translate.directive.ts:42",{"_index":99,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["src/translate.directive.ts:47",{"_index":101,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["src/translate.directive.ts:55",{"_index":93,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["src/translate.module.t",{"_index":151,"title":{},"body":{"modules/TranslateModule.html":{}}}],["src/translate.pipe.t",{"_index":163,"title":{},"body":{"pipes/TranslatePipe.html":{},"coverage.html":{}}}],["src/translate.pipe.ts:12",{"_index":170,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["src/translate.pipe.ts:13",{"_index":171,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["src/translate.pipe.ts:14",{"_index":172,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["src/translate.pipe.ts:23",{"_index":168,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["src/translate.pipe.ts:31",{"_index":164,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["src/translate.service.t",{"_index":184,"title":{},"body":{"injectables/TranslateService.html":{},"coverage.html":{}}}],["src/translate.service.ts:107",{"_index":210,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/translate.service.ts:111",{"_index":203,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/translate.service.ts:117",{"_index":217,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/translate.service.ts:140",{"_index":219,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/translate.service.ts:15",{"_index":226,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/translate.service.ts:151",{"_index":213,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/translate.service.ts:16",{"_index":227,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/translate.service.ts:17",{"_index":233,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/translate.service.ts:18",{"_index":234,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/translate.service.ts:20",{"_index":229,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/translate.service.ts:21",{"_index":236,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/translate.service.ts:23",{"_index":198,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/translate.service.ts:25",{"_index":228,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/translate.service.ts:26",{"_index":225,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/translate.service.ts:30",{"_index":206,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/translate.service.ts:43",{"_index":222,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/translate.service.ts:58",{"_index":224,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/translate.service.ts:71",{"_index":201,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/translate.service.ts:80",{"_index":208,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/types/config.token.t",{"_index":407,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/constants.enum.t",{"_index":418,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/transl",{"_index":59,"title":{},"body":{"interfaces/MultipleTranslationResult.html":{},"interfaces/TranslateConfiguration.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["standard",{"_index":319,"title":{},"body":{"changelog.html":{}}}],["stanford",{"_index":525,"title":{},"body":{"license.html":{}}}],["start",{"_index":308,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statement",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":158,"title":{},"body":{"modules/TranslateModule.html":{}}}],["string",{"_index":27,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/MultipleTranslationResult.html":{},"interfaces/TranslateConfiguration.html":{},"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":108,"title":{},"body":{"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"license.html":{}}}],["sublicens",{"_index":544,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":505,"title":{},"body":{"index.html":{}}}],["subscribe(([transl",{"_index":278,"title":{},"body":{"injectables/TranslateService.html":{}}}],["subscribe(isload",{"_index":131,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["subscribe(transl",{"_index":263,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{}}}],["subscribe(translatedtitl",{"_index":463,"title":{},"body":{"index.html":{}}}],["substanti",{"_index":553,"title":{},"body":{"license.html":{}}}],["support",{"_index":577,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":578,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":241,"title":{},"body":{"injectables/TranslateService.html":{}}}],["switchmap(overridefilenam",{"_index":285,"title":{},"body":{"injectables/TranslateService.html":{}}}],["switchmapto",{"_index":242,"title":{},"body":{"injectables/TranslateService.html":{}}}],["switchmapto(keypath",{"_index":266,"title":{},"body":{"injectables/TranslateService.html":{}}}],["tabl",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["tailor",{"_index":301,"title":{},"body":{"injectables/TranslateService.html":{}}}],["take",{"_index":114,"title":{},"body":{"directives/TranslateDirective.html":{},"injectables/TranslateService.html":{}}}],["take(1",{"_index":277,"title":{},"body":{"injectables/TranslateService.html":{}}}],["takeuntil",{"_index":113,"title":{},"body":{"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{}}}],["takeuntil(this.unsubscrib",{"_index":180,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["text",{"_index":354,"title":{},"body":{"changelog.html":{}}}],["this.defaultkey",{"_index":205,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.defaultprefix",{"_index":257,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.descript",{"_index":470,"title":{},"body":{"index.html":{}}}],["this.docheck(isload",{"_index":132,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["this.element.nativeelement.textcont",{"_index":126,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["this.element.nativeelement.textcontent.trim",{"_index":127,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["this.extens",{"_index":54,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.getall(keypath",{"_index":268,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.getone(keypath",{"_index":269,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.http.get(this.path",{"_index":53,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.keypath",{"_index":125,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["this.loaderservic",{"_index":246,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.loaderservice.getfile(defaultfilenam",{"_index":273,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.loaderservice.getfile(filenam",{"_index":262,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.loaderservice.getfile(filename).pip",{"_index":271,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.overridekey",{"_index":204,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.path",{"_index":51,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.read(keypath",{"_index":290,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.readvalue(path",{"_index":293,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.registerkeychecker(this.keypath",{"_index":128,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["this.runonecheck(this.keypath",{"_index":121,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["this.titl",{"_index":464,"title":{},"body":{"index.html":{}}}],["this.transl",{"_index":183,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["this.translateparam",{"_index":120,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["this.translateservice.get('body.titl",{"_index":462,"title":{},"body":{"index.html":{}}}],["this.translateservice.get(['body.titl",{"_index":467,"title":{},"body":{"index.html":{}}}],["this.translateservice.getbyfilename('body.titl",{"_index":490,"title":{},"body":{"index.html":{}}}],["this.translateservice.isequivalent(this.translateparam",{"_index":119,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["this.translateservice.read(keypath",{"_index":136,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["this.translateservice.read(v",{"_index":182,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["this.translateservice.setdefault('default",{"_index":477,"title":{},"body":{"index.html":{}}}],["this.translateservice.setoverride('overrid",{"_index":478,"title":{},"body":{"index.html":{}}}],["this.translateservice.translationsload",{"_index":123,"title":{},"body":{"directives/TranslateDirective.html":{}}}],["this.translationload",{"_index":122,"title":{},"body":{"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{}}}],["this.translationloaded$.subscrib",{"_index":181,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["this.translations[defaultfilenam",{"_index":281,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.translations[defaultkey",{"_index":294,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.translations[filenam",{"_index":280,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.translations[overridekey",{"_index":292,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.translations[this.defaultkey",{"_index":259,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.translations[this.overridekey",{"_index":264,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.translationservice.getbrowserlanguag",{"_index":431,"title":{},"body":{"index.html":{}}}],["this.translationservice.setdefault(`${defaultprefix",{"_index":432,"title":{},"body":{"index.html":{}}}],["this.translationsloaded.next(fals",{"_index":261,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.translationsloaded.next(tru",{"_index":260,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.translationsloaded.pip",{"_index":265,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.unsubscribe.complet",{"_index":130,"title":{},"body":{"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{}}}],["this.unsubscribe.next",{"_index":129,"title":{},"body":{"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{}}}],["throughout",{"_index":439,"title":{},"body":{"index.html":{}}}],["throw",{"_index":345,"title":{},"body":{"changelog.html":{}}}],["thu",{"_index":347,"title":{},"body":{"changelog.html":{}}}],["titl",{"_index":447,"title":{},"body":{"index.html":{}}}],["tort",{"_index":574,"title":{},"body":{"license.html":{}}}],["transform",{"_index":165,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["transform(v",{"_index":166,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["translat",{"_index":73,"title":{},"body":{"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["translate.direct",{"_index":155,"title":{},"body":{"modules/TranslateModule.html":{}}}],["translate.pip",{"_index":156,"title":{},"body":{"modules/TranslateModule.html":{}}}],["translate.servic",{"_index":112,"title":{},"body":{"directives/TranslateDirective.html":{},"modules/TranslateModule.html":{},"pipes/TranslatePipe.html":{}}}],["translate]=\"{param",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["translateconfigur",{"_index":18,"title":{"interfaces/TranslateConfiguration.html":{}},"body":{"injectables/LoaderService.html":{},"interfaces/TranslateConfiguration.html":{},"injectables/TranslateService.html":{},"coverage.html":{}}}],["translatedirect",{"_index":66,"title":{"directives/TranslateDirective.html":{}},"body":{"directives/TranslateDirective.html":{},"modules/TranslateModule.html":{},"coverage.html":{},"overview.html":{}}}],["translatedtitl",{"_index":465,"title":{},"body":{"index.html":{}}}],["translatedtitle);api",{"_index":492,"title":{},"body":{"index.html":{}}}],["translatemodul",{"_index":138,"title":{"modules/TranslateModule.html":{}},"body":{"modules/TranslateModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["translatemodule.forroot",{"_index":429,"title":{},"body":{"index.html":{}}}],["translateparam",{"_index":76,"title":{},"body":{"directives/TranslateDirective.html":{},"changelog.html":{}}}],["translatepip",{"_index":147,"title":{"pipes/TranslatePipe.html":{}},"body":{"modules/TranslateModule.html":{},"pipes/TranslatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["translateservic",{"_index":77,"title":{"injectables/TranslateService.html":{}},"body":{"directives/TranslateDirective.html":{},"modules/TranslateModule.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"coverage.html":{},"index.html":{}}}],["translateservice.translationsloaded.pip",{"_index":178,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["translationload",{"_index":78,"title":{},"body":{"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{}}}],["translationloaded.next(defaultfilenam",{"_index":283,"title":{},"body":{"injectables/TranslateService.html":{}}}],["translationloaded.next(filenam",{"_index":282,"title":{},"body":{"injectables/TranslateService.html":{}}}],["translationloaded.pip",{"_index":284,"title":{},"body":{"injectables/TranslateService.html":{}}}],["translationresult",{"_index":63,"title":{},"body":{"interfaces/MultipleTranslationResult.html":{},"injectables/TranslateService.html":{},"miscellaneous/typealiases.html":{}}}],["translations['body.descript",{"_index":471,"title":{},"body":{"index.html":{}}}],["translations['body.titl",{"_index":469,"title":{},"body":{"index.html":{}}}],["translationsload",{"_index":189,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{}}}],["type",{"_index":24,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/MultipleTranslationResult.html":{},"interfaces/TranslateConfiguration.html":{},"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":582,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/config.token",{"_index":44,"title":{},"body":{"injectables/LoaderService.html":{},"modules/TranslateModule.html":{},"injectables/TranslateService.html":{}}}],["types/constants.enum",{"_index":245,"title":{},"body":{"injectables/TranslateService.html":{}}}],["types/transl",{"_index":45,"title":{},"body":{"injectables/LoaderService.html":{},"injectables/TranslateService.html":{}}}],["umd",{"_index":325,"title":{},"body":{"changelog.html":{}}}],["undefin",{"_index":329,"title":{},"body":{"changelog.html":{}}}],["univers",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["unless",{"_index":498,"title":{},"body":{"index.html":{}}}],["unlik",{"_index":514,"title":{},"body":{"index.html":{}}}],["unnecessari",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["unsubscrib",{"_index":80,"title":{},"body":{"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{}}}],["updat",{"_index":336,"title":{},"body":{"changelog.html":{}}}],["upgrad",{"_index":311,"title":{},"body":{"changelog.html":{}}}],["us",{"_index":454,"title":{},"body":{"index.html":{},"license.html":{}}}],["usag",{"_index":452,"title":{},"body":{"index.html":{}}}],["usevalu",{"_index":160,"title":{},"body":{"modules/TranslateModule.html":{}}}],["v5",{"_index":425,"title":{},"body":{"index.html":{}}}],["v6",{"_index":424,"title":{},"body":{"index.html":{}}}],["val",{"_index":169,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["valu",{"_index":35,"title":{},"body":{"injectables/LoaderService.html":{},"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variabl",{"_index":397,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":388,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["void",{"_index":95,"title":{},"body":{"directives/TranslateDirective.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslateService.html":{},"index.html":{}}}],["warn",{"_index":334,"title":{},"body":{"changelog.html":{}}}],["warranti",{"_index":555,"title":{},"body":{"license.html":{}}}],["whether",{"_index":571,"title":{},"body":{"license.html":{}}}],["window.navigator.languag",{"_index":249,"title":{},"body":{"injectables/TranslateService.html":{}}}],["window.navigator.languages[0",{"_index":250,"title":{},"body":{"injectables/TranslateService.html":{}}}],["wish",{"_index":506,"title":{},"body":{"index.html":{}}}],["within",{"_index":358,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":483,"title":{},"body":{"index.html":{},"license.html":{}}}],["zoom",{"_index":148,"title":{},"body":{"modules/TranslateModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/loader.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                extension\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                    Public\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, config: TranslateConfiguration)\n                    \n                \n                        \n                            \n                                Defined in src/loader.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    TranslateConfiguration\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFile(fileName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/loader.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     TranslateConfiguration\n\n                    \n                \n                    \n                        \n                            Type :     TranslateConfiguration\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/loader.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            extension\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        extension:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '.json'\n                        \n                    \n                        \n                            \n                                    Defined in src/loader.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        http:     HttpClient\n\n                    \n                \n                    \n                        \n                            Type :     HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/loader.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            path\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        path:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/languages/'\n                        \n                    \n                        \n                            \n                                    Defined in src/loader.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { CONFIG } from './types/config.token';\nimport { TranslateConfiguration } from './types/translate-configuration.interface';\n\n@Injectable()\nexport class LoaderService {\n\n  public path = '/assets/languages/';\n  public extension = '.json';\n\n  constructor(public http: HttpClient,\n              @Inject(CONFIG) public config: TranslateConfiguration) {\n    this.path = config.path ? config.path : this.path;\n  }\n\n  public getFile(fileName: string): Observable {\n    return this.http.get(this.path + fileName + this.extension)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MultipleTranslationResult.html":{"url":"interfaces/MultipleTranslationResult.html","title":"interface - MultipleTranslationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MultipleTranslationResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/translation-result.type.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in src/types/translation-result.type.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface MultipleTranslationResult {\n  [key: string]: string\n}\n\nexport type TranslationResult = MultipleTranslationResult | string;\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TranslateConfiguration.html":{"url":"interfaces/TranslateConfiguration.html","title":"interface - TranslateConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TranslateConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/translate-configuration.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        path\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TranslateConfiguration {\n  path: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TranslateDirective.html":{"url":"directives/TranslateDirective.html","title":"directive - TranslateDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TranslateDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/translate.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [translate]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                element\n                            \n                            \n                                    Public\n                                keyPath\n                            \n                            \n                                    Public\n                                translateParams\n                            \n                            \n                                    Public\n                                translateService\n                            \n                            \n                                    Public\n                                translationLoaded$\n                            \n                            \n                                    Private\n                                unsubscribe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                doCheck\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                registerKeyChecker\n                            \n                            \n                                    Private\n                                runOneCheck\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                translate\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/translate.directive.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        translate\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/translate.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            doCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doCheck(isLoaded: , keyPath: , params: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/translate.directive.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isLoaded\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        keyPath\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/translate.directive.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/translate.directive.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerKeyChecker\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerKeyChecker(keyPath: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/translate.directive.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyPath\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            runOneCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        runOneCheck(keyPath: , params: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/translate.directive.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyPath\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/translate.directive.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keyPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        keyPath:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/translate.directive.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateParams:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/translate.directive.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateService:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/translate.directive.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translationLoaded$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translationLoaded$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/translate.directive.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            unsubscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unsubscribe:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/translate.directive.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        params\n                    \n                \n\n\n                \n                    \n                        setparams(params: )\n                    \n                \n                            \n                                \n                                    Defined in src/translate.directive.ts:16\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            params\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, Input, OnDestroy } from '@angular/core';\nimport { TranslateService } from './translate.service';\nimport { Subject, Observable } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\n@Directive({\n  selector: '[translate]'\n})\nexport class TranslateDirective implements AfterViewInit, OnDestroy {\n\n  public keyPath: string;\n  public translateParams;\n  public translationLoaded$: Observable;\n  private unsubscribe = new Subject();\n\n  @Input('translate') set params(params) {\n    if (!this.translateService.isEquivalent(this.translateParams, params)) {\n      this.translateParams = params;\n      if (this.translateParams) {\n        this.runOneCheck(this.keyPath, this.translateParams);\n      }\n    }\n  };\n\n  constructor(public element: ElementRef,\n              public translateService: TranslateService) {\n    this.translationLoaded$ = this.translateService.translationsLoaded\n      .pipe(takeUntil(this.unsubscribe));\n  }\n\n  ngAfterViewInit() {\n    this.keyPath = this.element.nativeElement.textContent ? this.element.nativeElement.textContent.trim() : '';\n    this.element.nativeElement.textContent = '';\n    this.registerKeyChecker(this.keyPath);\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  private registerKeyChecker(keyPath) {\n    this.translationLoaded$\n      .subscribe(isLoaded => this.doCheck(isLoaded, keyPath, this.translateParams));\n  }\n\n  private runOneCheck(keyPath, params) {\n    if (keyPath) {\n      this.translationLoaded$\n        .pipe(take(1))\n        .subscribe(isLoaded => this.doCheck(isLoaded, keyPath, params));\n    }\n  }\n\n  private doCheck(isLoaded, keyPath, params) {\n    if (isLoaded) {\n      const readValue = keyPath !== '' ? this.translateService.read(keyPath, params) : '';\n      this.element.nativeElement.textContent = readValue === keyPath ? '' : readValue;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TranslateModule.html":{"url":"modules/TranslateModule.html","title":"module - TranslateModule","body":"\n                   \n\n\n\n\n  Modules\n  TranslateModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TranslateModule\n\n\n\ncluster_TranslateModule_declarations\n\n\n\ncluster_TranslateModule_exports\n\n\n\n\nTranslateDirective\n\nTranslateDirective\n\n\n\nTranslateModule\n\nTranslateModule\n\nTranslateModule -->\n\nTranslateDirective->TranslateModule\n\n\n\n\n\nTranslatePipe\n\nTranslatePipe\n\nTranslateModule -->\n\nTranslatePipe->TranslateModule\n\n\n\n\n\nTranslateDirective \n\nTranslateDirective \n\nTranslateDirective  -->\n\nTranslateModule->TranslateDirective \n\n\n\n\n\nTranslatePipe \n\nTranslatePipe \n\nTranslatePipe  -->\n\nTranslateModule->TranslatePipe \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/translate.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TranslateDirective\n                            \n                            \n                                TranslatePipe\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TranslateDirective\n                            \n                            \n                                    TranslatePipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TranslateDirective } from './translate.directive';\nimport { TranslatePipe } from './translate.pipe';\nimport { TranslateService } from './translate.service';\nimport { LoaderService } from './loader.service';\n\nimport { CONFIG } from './types/config.token';\n\n@NgModule({\n  imports: [HttpClientModule],\n  declarations: [\n    TranslateDirective,\n    TranslatePipe\n  ],\n  exports: [\n    TranslateDirective,\n    TranslatePipe\n  ]\n})\nexport class TranslateModule {\n  static forRoot(config = {}): ModuleWithProviders {\n    return {\n      ngModule: TranslateModule,\n      providers: [\n        TranslateService,\n        LoaderService,\n        { provide: CONFIG, useValue: config }\n      ]\n    };\n  };\n  static forChild(): ModuleWithProviders {\n    return {\n      ngModule: TranslateModule\n    }\n  };\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TranslatePipe.html":{"url":"pipes/TranslatePipe.html","title":"pipe - TranslatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TranslatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/translate.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        translate\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/translate.pipe.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(val: , args: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/translate.pipe.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        args\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translation:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/translate.pipe.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translationLoaded$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translationLoaded$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/translate.pipe.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            unsubscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unsubscribe:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/translate.pipe.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from './translate.service';\nimport { Subject, Observable } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\n@Pipe({\n  name: 'translate',\n  pure: false\n})\nexport class TranslatePipe implements PipeTransform, OnDestroy {\n\n  public translation: string = '';\n  public translationLoaded$: Observable;\n  private unsubscribe = new Subject();\n\n  constructor(private translateService: TranslateService) {\n    this.translationLoaded$ = translateService.translationsLoaded.pipe(\n      filter(Boolean),\n      takeUntil(this.unsubscribe)\n    );\n  }\n\n  transform(val, args): string {\n    this.translationLoaded$.subscribe(() => {\n      const readValue = val ? this.translateService.read(val, args) : '';\n      this.translation = readValue === val ? this.translation : readValue;\n    });\n    return this.translation;\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslateService.html":{"url":"injectables/TranslateService.html","title":"injectable - TranslateService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TranslateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/translate.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                defaultKey\n                            \n                            \n                                    Public\n                                defaultPrefix\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                    Public\n                                loaderService\n                            \n                            \n                                    Private\n                                matcher\n                            \n                            \n                                    Public\n                                overrideKey\n                            \n                            \n                                    Public\n                                translations\n                            \n                            \n                                    Public\n                                translationsLoaded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Private\n                                getAll\n                            \n                            \n                                    Public\n                                getBrowserLanguage\n                            \n                            \n                                    Public\n                                getByFileName\n                            \n                            \n                                    Private\n                                getOne\n                            \n                            \n                                    Public\n                                isEquivalent\n                            \n                            \n                                    Public\n                                read\n                            \n                            \n                                    Private\n                                readValue\n                            \n                            \n                                    Public\n                                setDefault\n                            \n                            \n                                    Public\n                                setOverride\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, config: TranslateConfiguration)\n                    \n                \n                        \n                            \n                                Defined in src/translate.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    TranslateConfiguration\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(keyPaths: string | Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/translate.service.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyPaths\n                                                        \n                                                                    string | Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAll(keyPaths: Array, fileName: , defaultKey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/translate.service.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        keyPaths\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        fileName\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.overrideKey\n                                                        \n\n                                                \n                                                \n                                                        defaultKey\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.defaultKey\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getBrowserLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBrowserLanguage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/translate.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getByFileName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getByFileName(keyPaths: string | Array, fileName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/translate.service.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyPaths\n                                                        \n                                                                    string | Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fileName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getOne\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getOne(keyPath: string, fileName: , defaultKey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/translate.service.ts:107\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        keyPath\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        fileName\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.overrideKey\n                                                        \n\n                                                \n                                                \n                                                        defaultKey\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.defaultKey\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isEquivalent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isEquivalent(a: , b: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/translate.service.ts:151\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            read\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        read(keyPath: string, params: object, overrideKey: , defaultKey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/translate.service.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        keyPath\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        overrideKey\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.overrideKey\n                                                        \n\n                                                \n                                                \n                                                        defaultKey\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.defaultKey\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            readValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        readValue(path: Array, translation: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/translate.service.ts:140\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        translation\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | CONSTANTS.EXIT\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDefault\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDefault(fileName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/translate.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setOverride\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setOverride(fileName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/translate.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     TranslateConfiguration\n\n                    \n                \n                    \n                        \n                            Type :     TranslateConfiguration\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/translate.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            defaultKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultKey:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/translate.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            defaultPrefix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultPrefix:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/translate.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        http:     HttpClient\n\n                    \n                \n                    \n                        \n                            Type :     HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/translate.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaderService:     LoaderService\n\n                    \n                \n                    \n                        \n                            Type :     LoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/translate.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            matcher\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matcher:     \n\n                    \n                \n                    \n                        \n                            Default value : key => new RegExp('{{\\\\s?[\\\\b' + key + '\\\\b]*\\\\s?}}', 'gm')\n                        \n                    \n                        \n                            \n                                    Defined in src/translate.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            overrideKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        overrideKey:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/translate.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translations\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translations:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/translate.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translationsLoaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translationsLoaded:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/translate.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject, Subject, of as observableOf, from as observableFrom, combineLatest } from 'rxjs';\nimport { filter, switchMap, switchMapTo, take } from 'rxjs/operators';\n\nimport { LoaderService } from './loader.service';\nimport { CONFIG } from './types/config.token';\nimport { TranslateConfiguration } from './types/translate-configuration.interface';\nimport { TranslationResult } from './types/translation-result.type';\nimport { CONSTANTS } from './types/constants.enum';\n\n@Injectable()\nexport class TranslateService {\n\n  public defaultKey;\n  public defaultPrefix;\n  public overrideKey;\n  public translations = {};\n\n  public loaderService: LoaderService;\n  public translationsLoaded = new BehaviorSubject(false);\n\n  private matcher = key => new RegExp('{{\\\\s?[\\\\b' + key + '\\\\b]*\\\\s?}}', 'gm');\n\n  constructor(public http: HttpClient,\n              @Inject(CONFIG) public config: TranslateConfiguration) {\n    this.loaderService = new LoaderService(http, config);\n  }\n\n  public getBrowserLanguage() {\n    let browserLanguage = window.navigator.languages\n      ? window.navigator.languages[0]\n      : window.navigator.language;\n    if (browserLanguage.indexOf('-') !== -1) {\n      browserLanguage = browserLanguage.split('-')[0];\n    }\n    if (browserLanguage.indexOf('_') !== -1) {\n      browserLanguage = browserLanguage.split('_')[0];\n    }\n    return browserLanguage;\n  }\n\n  public setDefault(fileName: string) {\n    this.defaultKey = fileName;\n    this.defaultPrefix = fileName.split('-')[0];\n    if (this.translations[this.defaultKey]) {\n      this.translationsLoaded.next(true);\n    } else {\n      this.translationsLoaded.next(false);\n      this.loaderService.getFile(fileName)\n        .subscribe(translations => {\n          this.translations[this.defaultKey] = translations;\n          this.translationsLoaded.next(true);\n        });\n    }\n  }\n\n  public setOverride(fileName: string) {\n    this.overrideKey = fileName;\n    if (this.translations[this.overrideKey]) {\n      this.translationsLoaded.next(true);\n    } else {\n      this.loaderService.getFile(fileName)\n        .subscribe(translations => {\n          this.translations[this.overrideKey] = translations;\n          this.translationsLoaded.next(true);\n        });\n    }\n  }\n\n  public get(keyPaths: string | Array): Observable {\n    return this.translationsLoaded.pipe(\n      filter(Boolean),\n      switchMapTo(keyPaths instanceof Array\n        ? this.getAll(keyPaths)\n        : this.getOne(keyPaths))\n    );\n  }\n\n  public getByFileName(keyPaths: string | Array, fileName: string): Observable {\n    const translationLoaded = new Subject();\n    const defaultFileName = `${this.defaultPrefix}-${fileName.split('-')[1]}`;\n    this.loaderService.getFile(fileName).pipe(\n        file => combineLatest(file, this.loaderService.getFile(defaultFileName)),\n        filter(([file, defaultFile]) => [file, defaultFile].indexOf(undefined) === -1),\n        take(1)\n      ).subscribe(([translations, defaultTranslations]) => {\n          this.translations[fileName] = translations;\n          this.translations[defaultFileName] = defaultTranslations;\n          translationLoaded.next(fileName);\n        }, () => {\n          this.loaderService.getFile(defaultFileName)\n            .pipe(take(1))\n            .subscribe(translations => {\n              this.translations[defaultFileName] = translations;\n              translationLoaded.next(defaultFileName);\n            });\n        }\n      );\n    return translationLoaded.pipe(\n      switchMap(overrideFileName => keyPaths instanceof Array\n        ? this.getAll(keyPaths, overrideFileName, defaultFileName)\n        : this.getOne(keyPaths, overrideFileName, defaultFileName)\n      ));\n  }\n\n  private getOne(keyPath: string, fileName = this.overrideKey, defaultKey = this.defaultKey): Observable {\n    return observableFrom([this.read(keyPath, {}, fileName, defaultKey)])\n  }\n\n  private getAll(keyPaths: Array, fileName = this.overrideKey, defaultKey = this.defaultKey): Observable {\n    return observableOf(keyPaths.reduce(\n      (acc, keyPath) => ({ ...acc, [keyPath]: this.read(keyPath, {}, fileName, defaultKey) }), {}\n    ));\n  }\n\n  public read(keyPath: string, params = {}, overrideKey = this.overrideKey, defaultKey = this.defaultKey): string {\n    let value: string = CONSTANTS.EXIT;\n    const path = keyPath.split('.');\n    if (this.translations[overrideKey]) {\n      value = this.readValue(path, this.translations[overrideKey]);\n      if (value === CONSTANTS.EXIT) {\n        value = this.readValue(path, this.translations[defaultKey]);\n      }\n    } else if (this.translations[defaultKey]) {\n      value = this.readValue(path, this.translations[defaultKey]);\n    }\n    if (Boolean(params) && params !== {}) {\n      value = Object.keys(params)\n        .reduce((final, key) => final.replace(this.matcher(key), params[key]), value);\n    }\n    if (value === CONSTANTS.EXIT) {\n      console.warn('Unknown Key: ', keyPath);\n      return keyPath;\n    }\n    return value;\n  }\n\n  // this is a tailored 'reduce' method that breaks if a value is not found\n  private readValue(path: Array, translation: any): string | CONSTANTS.EXIT {\n    const length = path.length;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n2.0.0\n\nUpgrade to Angular 6 and RxJS 6 (with pipeable operators)\nUpgrade rollup build configuration to new standard and distribute AOT, esm2015, fesm2015, esm5 and umd\n\n1.1.8 - 1.1.12\n\nhandle undefined and null more gracefully and log a warning in the console.\nupdate getFileByName to more rreliably capture the translations by adding the default fallback to the call. This ensures the new file doesn't throw a lot of warnings in the console, thus slowing the app.\n\n1.1.5\n\nAllow HTML and natural text to pass as-is for a more lenient translate directive (allowing conditional translation within child components -- pass a key and have it translate, or pass an already translated string and have it display).\n\n1.1.1 - 1.1.4\n\numd build integration with rollup.\n\n1.1.0\n\nChange [translateParams] @Input to be the same name as the directive name for a more concise interface (ie. now [translate]=\"{param: 'value'}\")\nsetLanguage is now setOverride - to better describe what it does ('language' can be assumed, so it's unnecessary).\n\n1.0.2\n\nRevert initial setup from RxJS 6 to allow more universal application (with a forecast of moving the RxJS 6 in a version 2.0.0).\n\n1.0.1\n\nMinor format updates.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    setup-jest.ts\n            \n            \n                variable\n            \n            \n                BrowserDynamicTestingModule\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    setup-jest.ts\n            \n            \n                variable\n            \n            \n                getTestBed\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    setup-jest.ts\n            \n            \n                variable\n            \n            \n                platformBrowserDynamicTesting\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/loader.service.ts\n            \n            \n                injectable\n            \n            \n                LoaderService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/mocks/loader.service.mock.ts\n            \n            \n                variable\n            \n            \n                LoaderServiceMock\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/mocks/loader.service.mock.ts\n            \n            \n                variable\n            \n            \n                translations\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/translate.directive.ts\n            \n            \n                directive\n            \n            \n                TranslateDirective\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                    src/translate.pipe.ts\n            \n            \n                pipe\n            \n            \n                TranslatePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/translate.service.ts\n            \n            \n                injectable\n            \n            \n                TranslateService\n            \n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                    src/types/config.token.ts\n            \n            \n                variable\n            \n            \n                CONFIG\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/types/translate-configuration.interface.ts\n            \n            \n                interface\n            \n            \n                TranslateConfiguration\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/types/translation-result.type.ts\n            \n            \n                interface\n            \n            \n                MultipleTranslationResult\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer Dependencies\n    \n    \n        \n            @angular/common : ^6.0.0\n        \n            @angular/core : ^6.0.0\n        \n            rxjs : ^6.0.0\n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONSTANTS   (src/.../constants.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types/constants.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CONSTANTS\n                    \n                \n                        \n                            \n                                 EXIT\n                            \n                        \n                        \n                            \n                                Value: EXIT\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular-intl  \nA lightweight internationalization library for Angular applications.\nVersions\n\n\n\nAngular\nangular-intl\n\n\n\n\nv6\n>=2.0.0\n\n\nv5\n1.0.2 - 1.1.12\n\n\n\nSetup\nFirst, import the TranslateModule in your root module, like so:\n@NgModule({\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    TranslateModule.forRoot({ path: '/assets/languages/' })\n  ]\n})\nexport class AppModule {\n  constructor(public translateService: TranslateService) {\n    const defaultPrefix = 'default';\n    const browserLanguage = this.translationService.getBrowserLanguage();\n    this.translationService.setDefault(`${defaultPrefix}-${browserLanguage}`); // eg. 'default-en'\n  }\n}This bootstraps the translation pipe, directive and service at the root level, making them available throughout the application.\nIn the /assets/languages directory, you should have .json files that contain the key/value pairs for your translations.\neg. '/assets/languages/default-en.json':\n{\n  \"BODY\": {\n    \"TITLE\": \"Title Translation\",\n    \"DESCRIPTION\": \"Description translation\",\n    \"GREETING\": \"Hello, {{ firstName }}!\"\n  }\n}Usage\nOnce bootstrapped, you can use the service, pipe and directive to make translations throughout your codebase.\nPipe example:\n\n{{ 'BODY.TITLE' | translate }}\n\n\n{{ 'BODY.GREETING' | translate:{ firstName: 'Linda' } }}Directive example:\n\nBODY.TITLE\n\n\nBODY.GREETINGService example:\n// for one translation\nthis.translateService.get('BODY.TITLE')\n  .subscribe(translatedTitle => this.title = translatedTitle);\n\n// for multiple translations\nthis.translateService.get(['BODY.TITLE', 'BODY.DESCRIPTION'])\n  .subscribe(translations => {\n    this.title = translations['BODY.TITLE'];\n    this.description = translations['BODY.DESCRIPTION'];\n  });Default overrides are also available, so after calling setDefault, you may call setOverride, which will be used first, and then fall back to the default if the key is not found in the language file specified in setOverride:\neg. '/assets/languages/override-en.json':\n{\n  \"BODY\": {\n    \"TITLE\": \"Title Translation Override\",\n  }\n}this.translateService.setDefault('default-en');\nthis.translateService.setOverride('override-en');This will output 'BODY.TITLE' = 'Title Translation Override'(from override-en.json), and 'BODY.DESCRIPTION' = 'Description translation' (from default-en.json)\nAlternatively, you can get a translation without enforcing an entire file override, by getting a translation by file. This uses the translation if it is already loaded, otherwise it requests the file and uses the value that corresponds to the key, all without loading that file as an override or making it default:\nthis.translateService.getByFileName('BODY.TITLE', 'alternate-en') // where 'alternate-en' is yet another language file\n  .subscribe(translatedTitle => this.title = translatedTitle);API\ngetBrowserLanguage(): string\n\nThis returns the current browser language code.\n\nsetDefault(fileName: string): void\n\nSets the default language. This can be used on its own, or as a fallback.\n\nsetOverride(fileName: string): void\n\nSets the language over the default. This should only be used once a default language has been specified, and does not need to be used unless you intend to override a default translation file.\n\ntranslationsLoaded: BehaviorSubject\n\nThis is used to determine exactly when translations have arrived (from the network call after setDefault or setOverride have been executed). You can subscribe to this if you wish to perform operations when translations are loaded throughout the lifecycle of the application.\n\nget(keyPaths: string | Array): Observable\n\nAccepts a string or an array of strings. Returns an Observable that contains a string, or an object of strings keyed by the original translation key path (ex. 'BODY.TITLE'). This will only return values once translations have loaded, so it is safe to use anywhere.\n\ngetByFileName(keyPaths: string | Array, fileName: string): Observable\n\nUnlike setDefault or setOverride, which are globally applied, this method will load a translation file and return the translated key without enforcing that language globally. Like get, it can accept a string or an array of strings and returns in the same pattern.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2008-2018 Corey Stanford\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TranslateModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TranslateModule\n\n\n\ncluster_TranslateModule_declarations\n\n\n\ncluster_TranslateModule_exports\n\n\n\n\nTranslateDirective\n\nTranslateDirective\n\n\n\nTranslateModule\n\nTranslateModule\n\nTranslateModule -->\n\nTranslateDirective->TranslateModule\n\n\n\n\n\nTranslatePipe\n\nTranslatePipe\n\nTranslateModule -->\n\nTranslatePipe->TranslateModule\n\n\n\n\n\nTranslateDirective \n\nTranslateDirective \n\nTranslateDirective  -->\n\nTranslateModule->TranslateDirective \n\n\n\n\n\nTranslatePipe \n\nTranslatePipe \n\nTranslatePipe  -->\n\nTranslateModule->TranslatePipe \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        1 directive\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TranslationResult   (src/.../translation-result.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types/translation-result.type.ts\n    \n        \n            \n                \n                    \n                        \n                        TranslationResult\n                    \n                \n                \n                    \n                        TranslationResult:     MultipleTranslationResult | string\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BrowserDynamicTestingModule   (setup-jest.ts)\n                        \n                        \n                            CONFIG   (src/.../config.token.ts)\n                        \n                        \n                            getTestBed   (setup-jest.ts)\n                        \n                        \n                            LoaderServiceMock   (src/.../loader.service.mock.ts)\n                        \n                        \n                            platformBrowserDynamicTesting   (setup-jest.ts)\n                        \n                        \n                            translations   (src/.../loader.service.mock.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    setup-jest.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BrowserDynamicTestingModule\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        BrowserDynamicTestingModule:     \n\n                    \n                \n                    \n                        \n                            Default value : require('@angular/platform-browser-dynamic/testing').BrowserDynamicTestingModule\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTestBed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getTestBed:     \n\n                    \n                \n                    \n                        \n                            Default value : require('@angular/core/testing').getTestBed\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            platformBrowserDynamicTesting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platformBrowserDynamicTesting:     \n\n                    \n                \n                    \n                        \n                            Default value : require('@angular/platform-browser-dynamic/testing').platformBrowserDynamicTesting\n                        \n                    \n\n\n            \n        \n\n    src/types/config.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONFIG\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CONFIG:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('config')\n                        \n                    \n\n\n            \n        \n\n    src/mocks/loader.service.mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LoaderServiceMock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LoaderServiceMock:     LoaderService\n\n                    \n                \n                    \n                        \n                            Type :     LoaderService\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  path: '/assets/language',\n  extension: '.json',\n  http: null,\n  config: null,\n  getFile: (key) => observableOf(translations[key])\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translations\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translations:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  'default-en': {\n    'BODY': {\n      'KNOWN_KEY': 'Known key example'\n    }\n  }\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
